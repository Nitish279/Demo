Login
Dropdown 1: Hard-coded options
Dropdown 2: Options fetched from an API
Home Page
Sections: 6 blocks, each containing an icon with accompanying text
Templates
Buttons:
Create New Template
Reset (to reset selections)
Search (to search among templates)
Reload
Dropdowns:
Select Repo
Select Inventory
Table:
Pagination: Previous and Next buttons
Each template displays:
Launch, Info, Edit, Copy, and Delete actions
Template Name, Inventory Name, Repo Name, and Description
Jobs
Buttons:
Search (to search among jobs)
Reload
Table:
Pagination: Previous and Next buttons
Each job displays:
Launch and Info actions
Template Name, Inventory Name, Repo Name, Started At, Started By, and Status
Inventories
Buttons:
Search (to search among inventories)
Reload
Table:
Pagination: Previous and Next buttons
Each inventory displays:
Info, Edit, and Delete actions
Inventory Name, SSH Key Status, Password Protection Status, and Defunct Status
Repos
Buttons:
Search (to search among repos)
Reload
Table:
Pagination: Previous and Next buttons
Each repo displays:
Info, Edit, Refresh, and Delete actions
Repo Name, URL, and Branch
Users
Buttons:
Search (to search among users)
Reload
Sync (to sync users from AD group)
Table:
Pagination: Previous and Next buttons
Keys
Buttons:
Create New Key
Search (to search among keys)
Reload
Table:
Pagination: Previous and Next buttons
Each key displays:
Info, Edit, Copy, and Delete actions
Key Name and Purpose
Info or Details
Buttons:
Back
Reload
Relaunch
Table: Displays job details
Tabs: Displays
Memes
Launch Props
Events
Stdout
Stderr
Launch and Relaunch
Modal: Docker tag
Edit
Similar to Create, but pre-filled values when copied
Delete



Login Dropdown 1 hard code and second fetch from Apihome page (6 blocks [Icon with Text])Templates:-Create new Template buttonsselect repo and Inventory dropdownreset button to reset selectionSearch to search among templates 
Reload ButtonTable with pagination Prev and Nexteach template shown in table will have Launch, info, edit copy and delete actionsalong with Name of template, Inventory Name, Repo Name and Description 

Templates:-Search to search among Jobs 
Reload ButtonTable with pagination Prev and Nexteach template shown in table will have Launch and info actionsalong with Name of template, Inventory Name, Repo Name stated at, started by and status 

Inventories:-Search to search among Inventories 
Reload ButtonTable with pagination Prev and Nexteach template shown in table will have info, edit and delete actionsalong with Inventory Name, has SSH key, is password protected  and defunct Repos:-Search to search among repos 
Reload ButtonTable with pagination Prev and Nexteach template shown in table will have info, edit, refresh and delete actionsalong with repo Name, url  and branch users:-Search to search among users 
Reload Buttonsync button to sync user from AD groupTable with pagination Prev and Next ..?Keys:-Create new key buttons search among keys 
Reload ButtonTable with pagination Prev and Nexteach template shown in table will have info, edit copy and delete actionsalong with Name of key and Purpose Info or details Back, reload and relaunch buttonsTable which shows jobs detailtabs that showsMemes, launch props, events, stdout and stderrLunch and re launchModal for docker tagEdit similar to createcopy open create will pre filled value  delete  

<div className="icons-grid">
          <div className="icon-card">
            <i className="icon templates-icon"></i>
            <p>Templates</p>
          </div>
          <div className="icon-card">
            <i className="icon jobs-icon"></i>
            <p>Jobs</p>
          </div>
          <div className="icon-card">
            <i className="icon inventories-icon"></i>
            <p>Inventories</p>
          </div>
          <div className="icon-card">
            <i className="icon repos-icon"></i>
            <p>Repos</p>
          </div>
          <div className="icon-card">
            <i className="icon users-icon"></i>
            <p>Users</p>
          </div>
          <div className="icon-card">
            <i className="icon keys-icon"></i>
            <p>Keys</p>
          </div>
        </div>

.icons-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 2rem;
}

.icon-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem;
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 8px;
  transition: transform 0.3s, box-shadow 0.3s;
  cursor: pointer;
}

.icon-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.icon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

/* Placeholder for icons */
.templates-icon::before { content: 'üìÑ'; }
.jobs-icon::before { content: 'üìù'; }
.inventories-icon::before { content: 'üì¶'; }
.repos-icon::before { content: 'üìÅ'; }
.users-icon::before { content: 'üë•'; }
.keys-icon::before { content: 'üîë'; }




Objective 1: Strengthen and Expand Front-End Architecture for Scalable Applications

Description: Collaborate with your team to solidify a new front-end architecture that includes various types of web applications (normal, single-page, server-side rendered, and micro frontends). Focus on clear UI and data separation to enhance flexibility, reusability, and maintainability.
Expected Outcome: Deliver a refined and documented front-end architecture model that boosts scalability, seamlessly integrates with existing and future applications, and reduces onboarding time and technical debt.
Objective 2: Advance Micro Frontend Capabilities for Strategic Projects

Description: Develop modular and reusable micro frontend components tailored for high-impact projects like Nexus. Ensure these components are self-contained with dedicated UI and data layers for easy integration across various LSEG applications.
Expected Outcome: Deliver at least one reusable micro frontend module with comprehensive documentation and integration guides, setting a standard for future projects.
Objective 3: Promote Knowledge Sharing and Team Onboarding Efficiency

Description: Use your expertise in Stellar UI's build process to conduct knowledge-sharing sessions, helping the team understand key architectural principles and development workflows. Support new hires like Thowfeeq to expedite their onboarding and alignment with team goals.
Expected Outcome: Conduct at least one in-depth session on Stellar UI's architecture and build process. Assist in onboarding at least one new team member, ensuring they achieve proficiency in foundational tasks within their first month.
Objective 4: Drive Accessible and User-Centric Component Development with React Spectrum and React Aria

Description: Lead the development of accessible and reusable Canopy2 components using React Spectrum and React Aria. Ensure these components meet high accessibility standards and enhance user experience across applications.
Expected Outcome: Deliver at least two production-ready, accessible components for Canopy2, complete with usage guidelines and best practices to facilitate seamless integration and promote accessibility compliance.
Objective 5: Enhance Agile Planning Poker Application for Team Productivity

Description: Improve the Agile Planning Poker application by incorporating team feedback to refine features and usability, aligning the app with Agile planning needs.
Expected Outcome: Roll out at least one significant feature enhancement or usability improvement to support effective and collaborative planning sessions.


This quarter, I successfully completed my assigned onboarding tasks on time, which enabled me to understand the team‚Äôs processes and workflows more effectively. I contributed to the development of micro frontend applications designed for future scalability, specifically targeting projects like Nexus. Additionally, I collaborated with Alex to build a new front-end architecture that includes multiple application types‚ÄîNormal Web Applications, Single Page Applications, Server-Side Applications, and Micro Frontend Applications‚Äîeach with its own UI and data layer for enhanced flexibility and modularity.

I also contributed to our component library by working on Canopy2 components using React Spectrum and React Aria, focusing on accessibility and reusability. Moreover, I analyzed the Stellar UI codebase and presented a session to the team explaining its build process and data flow, helping align our understanding and improve our development practices. I supported my colleague, Thowfeeq, during his onboarding, ensuring he was brought up to speed quickly, and developed an Agile Planning Poker app to assist with our team‚Äôs planning sessions.

For the next quarter, my focus is on further learning Java to broaden my skill set into backend development, aiming to become a full-stack developer. This will help me contribute more effectively to both frontend and backend tasks, enhancing team collaboration and project outcomes. I also plan to implement feedback-driven improvements in the Agile Planning Poker app. Additionally, I aim to support ongoing knowledge sharing to improve team collaboration and technical expertise.


This quarter, I demonstrated LSEG's values through active collaboration and mentorship within the team. By working closely with Alex on front-end architecture and supporting Thowfeeq through his onboarding process, I fostered a collaborative environment and helped new joiners integrate smoothly. I ensured integrity and thoroughness in my work by analyzing the Stellar UI codebase and sharing insights on the build process, data flow, and best practices, increasing the team's transparency and understanding.

I also demonstrated a commitment to innovation and excellence by developing scalable micro frontend applications and accessible Canopy2 components using React Spectrum and React Aria. These contributions align with our goal of building future-ready applications with high accessibility standards.

In the next quarter, I plan to continue embodying these values by engaging in more collaborative projects, such as refining our Agile Planning Poker app based on team feedback and expanding our component library with accessible, reusable components. I will also initiate regular knowledge-sharing sessions further to support team development and alignment with LSEG‚Äôs standards. Additionally, I will be learning Java to become a full-stack developer, which will enable me to contribute more effectively to both frontend and backend tasks, enhancing team collaboration and project outcomes.
